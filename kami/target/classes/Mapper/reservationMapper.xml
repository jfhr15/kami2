<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kami.kami.dao.ReservationMapper">
	
	<insert id="insertRes" parameterType="Res">
		insert into reservation(
			reservationseq
			,emp_id
			,mem_id
			,paymentNum
			,rsv_date
			,rsv_time
			,rsv_totalPrice
		) values(
			reservationSeq.nextval
			,#{emp_id}
			,#{mem_id}
			,'1'
			,TO_DATE(#{rsv_date},'YYYY-MM-DD HH24:MI')
			,#{rsv_time}
			,10000
		)
	</insert>

	<select id="selectRes" resultType="Res" parameterType="map">
		select
			reservationseq
			,emp_id
			,mem_id
			,paymentNum
			,rsv_date
			,rsv_time
			,rsv_totalPrice
	 	from 
	 		reservation 
	 	where
	 		mem_id=#{mem_id}
	</select>
	
	<select id="selectResEmp" resultType="Res" parameterType="map">
		select
			reservationseq
			,emp_id
			,mem_id
			,paymentNum
			,rsv_date
			,rsv_time
			,rsv_totalPrice
	 	from 
	 		reservation 
	 	where
	 		emp_id=#{emp_id}
	</select>
	
	<delete id="deleteRes" parameterType="map"> 
		delete from
			reservation
		where
			reservationseq=#{reservationseq}
	</delete>
	
	<select id="selectResOne" resultType="Res" parameterType="String">
		select
			reservationseq
			,emp_id
			,mem_id
			,paymentNum
			,rsv_date
			,rsv_time
			,rsv_totalPrice
	 	from 
	 		reservation 
	 	where
	 		reservationseq=#{reservationseq}
	</select>
	
	<update id="updateRes" parameterType="Res">
		update 
			reservation
		set
			emp_id=#{emp_id}
			,rsv_date=TO_DATE(#{rsv_date},'YYYY-MM-DD HH24:MI')
			,rsv_time=TO_DATE(#{rsv_time},'HH24:MI')
		where
			reservationseq=#{reservationseq}
	</update>
	
	<select id="employeeList" resultType="Idinfo" parameterType="String">
		select 
			employee.emp_id as id
			,idinfo.name as name
		from 
			employee
			,idinfo 
		where 
			emp_id not in(select emp_id from reservation where to_char(rsv_date,'yy/mm/dd hh24:mi') = #{rsv_date})
		and 
			employee.emp_id=idinfo.id
		and
			emp_id not in(select emp_id from offschedule where off_check='승인' and (to_date(#{rsv_date},'yy/mm/dd hh24:mi') between off_startdate and off_enddate))
	</select>
	
	<select id="selectProcedure" resultType="Procedure" parameterType="String"> 
		select
			procedureseq
			,pcd_name
			,pcd_setting
			,pcd_time
			,pcd_price
			,pcd_savfile
			,pcd_orgfile
		from
			procedure
		where
			pcd_setting=#{pcd_setting}
	</select>
	
	<select id="selectProcedureOne" resultType="Procedure" parameterType="Integer"> 
		select
			procedureseq
			,pcd_name
			,pcd_setting
			,pcd_time
			,pcd_price
			,pcd_savfile
			,pcd_orgfile
		from
			procedure
		where
			procedureseq=#{procedureseq}
	</select>
	
	<insert id="insertPI" parameterType="Procedureinfomation">
		insert into procedureinformation(
			proinfoseq
			,procedureseq
			,reservationseq
		) values(
			proinfoseq.nextval
			,#{procedureseq}
			,#{reservationseq}
		)
	</insert>
	
	<select id="currentRes" resultType="Res">
		select 
			max(reservationseq) as reservationseq 
		from 
			reservation
	</select>
</mapper>